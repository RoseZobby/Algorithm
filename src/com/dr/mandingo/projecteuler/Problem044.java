package com.dr.mandingo.projecteuler;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

/**
 * Pentagon numbers
 * 
 * ============================================================================
 * 
 * Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
 * pentagonal numbers are:
 * 
 * 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 * 
 * It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
 * 70 − 22 = 48, is not pentagonal.
 * 
 * Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
 * difference are pentagonal and D = |Pk − Pj| is minimised; what is the value
 * of D?
 * 
 * Answer: 5482660
 */
public class Problem044 {

	public static void main(String[] args) {

		List<Integer> pentagonals = new ArrayList<Integer>();

		Map<Integer, Integer> targets = new HashMap<Integer, Integer>();

		int n = 1;

		while (true) {
			int pentagonal = getPentagonal(n);
			if (targets.containsKey(pentagonal)) {
				System.out.println("the result is: " + targets.get(pentagonal));
				break;
			} else {
				Iterator<Integer> it = targets.keySet().iterator();
				if (it.hasNext()) {
					int key = it.next();
					if (pentagonal > key) {
						targets.remove(key);
					}
				}
			}

			for (int item : pentagonals) {
				int difference = pentagonal - item;
				if (pentagonals.contains(difference)) {
					int sum = pentagonal + item;
					targets.put(sum, difference);
				}
			}
			pentagonals.add(pentagonal);
			n++;
		}
	}

	public static int getPentagonal(int n) {
		return (n * (3 * n - 1)) / 2;
	}

}
